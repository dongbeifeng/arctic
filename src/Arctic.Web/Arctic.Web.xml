<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arctic.Web</name>
    </assembly>
    <members>
        <member name="T:Arctic.Web.ApiData">
            <summary>
            表示 WebApi 返回的数据
            </summary>
        </member>
        <member name="P:Arctic.Web.ApiData.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Arctic.Web.ApiData.ErrorMessage">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:Arctic.Web.ApiData.TraceId">
            <summary>
            唯一的请求Id
            </summary>
        </member>
        <member name="P:Arctic.Web.ApiData.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="T:Arctic.Web.ApiData`1">
            <summary>
            表示 WebApi 返回的数据
            </summary>
        </member>
        <member name="P:Arctic.Web.ApiData`1.Data">
            <summary>
            数据。
            </summary>
        </member>
        <member name="T:Arctic.Web.ListData`1">
            <summary>
            表示列表页数据
            </summary>
            <typeparam name="TElement"></typeparam>
        </member>
        <member name="P:Arctic.Web.ListData`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Arctic.Web.ListData`1.CurrentPage">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:Arctic.Web.ListData`1.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Arctic.Web.ListData`1.Total">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="T:Arctic.Web.OptionsData`1">
            <summary>
            表示选项列表的数据
            </summary>
            <typeparam name="TElement"></typeparam>
        </member>
        <member name="T:Arctic.Web.Books.BookDetails">
            <summary>
            表示图书的详细信息。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookDetails.BookId">
            <summary>
            图书 Id。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookDetails.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookDetails.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookDetails.Price">
            <summary>
            价格
            </summary>
        </member>
        <member name="T:Arctic.Web.Books.BookListArgs">
            <summary>
            列表查询参数，不需要实现特定接口或从特定基类派生。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListArgs.Title">
            <summary>
            使用 SearchArg 表示属性是查询参数。SearchMode.Like 表示支持模糊查找，
            使用 ? 表示一个字符，使用 * 表示任意个字符。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListArgs.PublicationDateFrom">
            <summary>
            当源属性名称和参数不同时，SourceProperty 指示在数据源的哪个属性上查找。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListArgs.PublicationDateTo">
            <summary>
            当 SearchMode 为 Expression 时，则使用具有约定名称的的属性来确定查询条件。
            约定的属性名为此属性名后跟 Expr 后缀。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListArgs.PublicationDateToExpr">
            <summary>
            为 PublicationDateTo 属性提供查询表达式。
            应使用 internal 修饰符，否则 swagger 提供的接口文档会出现 System.Reflection 命名空间中的类型。
            </summary>
        </member>
        <member name="M:Arctic.Web.Books.BookListArgs.Filter(System.Linq.IQueryable{Arctic.Books.Book})">
            <summary>
            名为 Filter 的公共实例方法会先被调用。参数和返回值应为 IQueryable{T}。
            </summary>
            <param name="q"></param>
            <returns></returns>
        </member>
        <member name="P:Arctic.Web.Books.BookListArgs.Sort">
            <summary>
            Sort 属性表示排序条件，例如 "Title ASC, PublicationDate DESC"
            表示首先按 Title 属性升序排序，再按 PublicationDate 降序排序。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListArgs.Current">
            <summary>
            Current 属性表示基于 1 的当前页面。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListArgs.PageSize">
            <summary>
            PageSize 属性表示每个分页的大小。
            </summary>
        </member>
        <member name="T:Arctic.Web.Books.BookListItem">
            <summary>
            图书列表页的数据项。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListItem.BookId">
            <summary>
            图书 Id。
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListItem.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.BookListItem.Price">
            <summary>
            价格
            </summary>
        </member>
        <member name="M:Arctic.Web.Books.BooksController.GetBookList(Arctic.Web.Books.BookListArgs)">
            <summary>
            列出图书
            </summary>
            <param name="args">查询参数</param>
            <returns></returns>
        </member>
        <member name="M:Arctic.Web.Books.BooksController.GetBookDetails(System.Int32)">
            <summary>
            详细信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Arctic.Web.Books.BooksController.CreateBook(Arctic.Web.Books.CreateBookArgs)">
            <summary>
            创建
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Arctic.Web.Books.BooksController.UpdateBook(System.Int32,Arctic.Web.Books.UpdateBookArgs)">
            <summary>
            更新
            </summary>
            <param name="id"></param>
            <param name="args"></param>
        </member>
        <member name="M:Arctic.Web.Books.BooksController.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Arctic.Web.Books.CreateBookArgs">
            <summary>
            创建图书操作的参数
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.CreateBookArgs.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.CreateBookArgs.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.CreateBookArgs.Price">
            <summary>
            价格
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.CreateBookArgs.PublicationDate">
            <summary>
            出版日期
            </summary>
        </member>
        <member name="T:Arctic.Web.Books.UpdateBookArgs">
            <summary>
            更新图书操作的参数
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.UpdateBookArgs.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.UpdateBookArgs.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Arctic.Web.Books.UpdateBookArgs.Price">
            <summary>
            价格
            </summary>
        </member>
        <member name="T:Arctic.Web.Controllers.ErrorController">
            <summary>
            错误处理程序
            </summary>
        </member>
        <member name="M:Arctic.Web.Controllers.ErrorController.Error">
            <summary>
            生产环境错误处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arctic.Web.Controllers.ErrorController.ErrorLocalDevelopment(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            开发环境错误处理
            </summary>
            <param name="webHostEnvironment"></param>
            <returns></returns>
        </member>
        <member name="T:Arctic.Web.Controllers.ExportSchemaController">
            <summary>
            向数据库导出表结构的工具。
            </summary>
        </member>
        <member name="M:Arctic.Web.Controllers.ExportSchemaController.Create">
            <summary>
            根据已注册到容器的 nh 映射信息向数据库导出表结构。此方法不是动态迁移表结构，而是删除旧表并创建新表，仅用于开发环境。
            </summary>
        </member>
        <member name="T:Arctic.Web.Controllers.HelloController">
            <summary>
            SimpleEventBus 示例。
            </summary>
        </member>
        <member name="M:Arctic.Web.Controllers.HelloController.FireHelloEventAsync(System.String)">
            <summary>
            引发 Hello 事件，默认配置使用 <see cref="T:Arctic.EventBus.HelloEventHandler"/> 将事件参数写入日志。
            </summary>
            <returns>将参数原样返回。</returns>
        </member>
        <member name="M:Arctic.Web.Controllers.HelloController.GetNextValAsync(System.String)">
            <summary>
            获取序列值
            </summary>
            <param name="seqName">序列名</param>
            <returns></returns>
        </member>
    </members>
</doc>
